daemon off;

# This is run inside Docker.
user root;

# Pid storage location.
pid /var/run/nginx.pid;

# Set number of worker processes.
worker_processes 1;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

# Write error log to the add-on log.
error_log /proc/1/fd/1 error;

# Max num of simultaneous connections by a worker process.
events {
    worker_connections 512;
}

http {
    include /etc/nginx/mime.types;

    access_log              off;
    client_max_body_size    4G;
    default_type            application/octet-stream;
    gzip                    on;
    keepalive_timeout       65;
    sendfile                on;
    server_tokens           off;
    tcp_nodelay             on;
    tcp_nopush              on;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
        listen 8099;
        allow  172.30.32.2;
        deny   all;

        # change to suit your case
        location / {

            # change to your ip and port
            proxy_pass https://192.168.1.1;

            # change "login.html" to the page of the service you want to access, this is the first page to be called by ingress
            location /startin {
                return 302 login.html;
            }

            # sub_filter_types specify the file type that the filters will try to alter, in this case will try every type
            sub_filter_types *;
            # play aroud whit those filters to make all requests relative and not absolute;
            # some sites have absolute paths for some resources so they will request resources from the root of the ingress url and that is wrong;
            # if you have:
            #   <script src="/js/jquery.easing.1.3.js" type="text/javascript"></script> OR <script src="../js/jquery.easing.1.3.js" type="text/javascript"></script>
            # you should turn it into:
            #   <script src="js/jquery.easing.1.3.js" type="text/javascript"></script>
            sub_filter 'href="/' 'href="';
            sub_filter 'src="/' 'src="';
            sub_filter 'src="../' 'src="';
            sub_filter 'self != top' 'false';
            # sub_filter_once repete the changes to all occurrences
            sub_filter_once off;
            # ignore content clickjacking prevention
            proxy_hide_header x-frame-options;
        }
#        # if you cant use sub_filter on the scripts directly you can copy the origi script and edit to suit what you need, and the return your copy of the script
#        location = /js/some.js {
#            # files placed in the /share/ingress.reverse-proxy/sfiles of homeassistant will be available in /etc/nginx/sfiles so that they can be can be served to the proxied service
#            alias /etc/nginx/sfiles/somePath/some.js;
#        }
    }
}